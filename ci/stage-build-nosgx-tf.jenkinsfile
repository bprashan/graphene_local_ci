stage('build') {
    if (env.CC == 'clang') {
        env.MESON_OPTIONS += ' -Dmusl=disabled'
    }
    script {
        try {
            sh '''
                cd "$WORKSPACE"
                meson setup build/ \
                    --werror \
                    --prefix="$PREFIX" \
                    --buildtype="$BUILDTYPE" \
                    -Dskeleton=enabled \
                    -Ddirect=enabled \
                    -Dsgx=disabled \
                    -Dtests=enabled \
                    $MESON_OPTIONS > meson_cmd_output.txt
                ninja -vC build > ninja_build_log.txt
                ninja -vC build install > ninja_install_log.txt
            '''
        } finally {
            archiveArtifacts 'build/meson-logs/**/*'
            archiveArtifacts 'ninja_build_log.txt'
            archiveArtifacts 'ninja_install_log.txt'
        }

        // Absolute path to libdir, as configured by Meson.
        // For our current builds this should be "$WORKSPACE/usr/lib/x86_64-linux-gnu":
        // --prefix is set from $PREFIX above (see config-docker.jenkinsfile) and should be "$WORKSPACE/usr";
        // --libdir is distro-dependent, but on Debian and derivatives it's "lib/x86_64-linux-gnu"
        libdir = sh(returnStdout: true, script: '''
            meson introspect build/ --buildoptions \
            | jq -r '(map(select(.name == "prefix")) + map(select(.name == "libdir"))) | map(.value) | join("/")'
        ''').trim()

        env.GRAMINE_PKGLIBDIR = libdir + '/gramine'

        // In CI we install to non-standard --prefix (see above). This makes sure the libraries are
        // available anyway (e.g. gramine-sgx-pf-crypt needs libsgx_util.so).
        env.PKG_CONFIG_PATH = libdir + '/pkgconfig'

        // prevent cheating and testing from repo
        sh 'rm -rf build'
        sh 'git clean -Xf subprojects'

    }
            
}
